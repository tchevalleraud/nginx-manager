worker_processes  1;
error_log /var/log/nginx/error.log;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    include /etc/nginx/proxy.conf;
    include /etc/nginx/fastcgi.conf;

    default_type  application/octet-stream;

    log_format  main '$remote_addr - $remote_user [$time_local]  $status "$request" $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile    on;
    tcp_nopush  on;

    proxy_cache_path /tmp/mycache levels=1:2 keys_zone=mycache:10m max_size=4g inactive=60m use_temp_path=off;

    geoip_country /usr/share/GeoIP/GeoIP.dat;

    vhost_traffic_status_zone;
    server_traffic_status_filter_by_set_key $geoip_country_code country::*;

    keepalive_timeout  65;

    # Default Serveur [Web / API]
    server {
        listen      80;
        server_name root;
        access_log  /var/log/nginx/root.access.log main;

        location / {
            root /var/www/nginx;
            index index.html;
        }

        location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }

        location /status/upstream {
            check_status html;
        }

        location /api/status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format json;
        }

        location /api/status/upstream {
            check_status json;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    # Simple reverse-proxy
    server {
        listen  80;
        server_name docker1.home;
        access_log  /var/log/nginx/home_docker1.access.log;

        error_page  500 502 503 504  /50x.html;

        vhost_traffic_status_filter_by_set_key $geoip_country_code country::$server_name;
        vhost_traffic_status_set_by_filter $requestCounter server/home.docker1/requestCounter;

        location / {
            proxy_pass  http://srv01;
        }

        location = /50x.html {
            root   /var/nginx/error;
        }
    }

    server {
        listen 80;
        server_name docker1.home;

        location / {
            add_header X-Proxy-Cache $upstream_cache_status;

            client_max_body_size 8m;
            client_body_buffer_size 128k;

            proxy_buffers 4 32k;

            proxy_cache mycache;
            proxy_cache_valid any 10m;
            proxy_connect_timeout 150;

            proxy_pass http://pool1;

            proxy_read_timeout 100;
            proxy_send_timeout 100;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 80;
        server_name docker2.home;

        location / {
            client_max_body_size 8m;
            client_body_buffer_size 128k;

            proxy_buffers 4 32k;

            proxy_pass http://pool2;

            proxy_read_timeout 100;
            proxy_send_timeout 100;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    upstream srv01 {
        server 10.33.10.91:9001;

        check interval=1000 rise=1 fall=3 timeout=3000;
    }

    upstream pool1 {
        server 10.33.10.91:9001;
        server 10.33.10.91:9002;

        check interval=5000 rise=1 fall=3 timeout=4000;
    }

    upstream pool2 {
        server 10.33.10.91:9003 weight=10;
        server 10.33.10.91:9004 weight=5;

        server 10.33.10.91:9001 backup;
        server 10.33.10.91:9002 backup;

        check interval=5000 rise=1 fall=3 timeout=4000;
    }

}
